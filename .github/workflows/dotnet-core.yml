name: Build .NET Core backend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Random word for kicks'
        # Default value if no value is explicitly provided
        default: 'Chocolate'
        # Input has to be provided for the workflow to run
        required: true

jobs:
  build:
    name: Build .NET Core backend
    strategy:
      matrix:
        kind: ['linux']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          # - kind: windows
            # os: windows-latest
            # target: win-x64
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore ./projects/health-wise-api/src/HealthWiseBackend.API
    - name: Build
      env:
        tag: $(git describe --tags --abbrev=0)
        release_name: api-${{matrix.target}}"
      run: dotnet build ./projects/health-wise-api/src/HealthWiseBackend.API -o ${{ github.workspace }}/api --configuration Release --no-restore
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        # Artifact name
        name: health-wise-api-artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}/api
        retention-days: 1

  release:
    if: ${{ github.ref == 'refs/heads/master'}}    
    name: Release to VPS
    needs: [build]
    strategy:
      matrix:
        kind: ['linux']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          # - kind: windows
            # os: windows-latest
            # target: win-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          # Artifact name
          name: health-wise-api-artifact
          # Destination path
          path: health-wise-api
      - name: Create the temp directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HEALTHWISE_SSH_HOST }}
          username: ${{ secrets.HEALTHWISE_SSH_USER }}
          password: ${{ secrets.HEALTHWISE_SSH_PW }}
          port: ${{ secrets.HEALTHWISE_SSH_PORT }}
          script: mkdir -p ${{ secrets.HEALTHWISE_SSH_TEMP_DEST}}/api
      - name: Transfer the built files to the temp directory
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.HEALTHWISE_SSH_HOST }}
          username: ${{ secrets.HEALTHWISE_SSH_USER }}
          password: ${{ secrets.HEALTHWISE_SSH_PW }}
          port: ${{ secrets.HEALTHWISE_SSH_PORT }}
          source: "health-wise-api"
          target: ${{ secrets.HEALTHWISE_SSH_TEMP_DEST}}/api
      - name: Actually deploy and restart api service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HEALTHWISE_SSH_HOST }}
          username: ${{ secrets.HEALTHWISE_SSH_USER }}
          port: ${{ secrets.HEALTHWISE_SSH_PORT }}
          key: ${{ secrets.HEALTHWISE_SSH_KEY }}
          passphrase: ${{ secrets.HEALTHWISE_SSH_PASSPHRASE }}
          script_stop: true
          script: |
            cp -r -f ${{ secrets.HEALTHWISE_SSH_TEMP_DEST}}/api/health-wise-api/* ${{ secrets.HEALTHWISE_SSH_DEST }}/api
            rm -rf ${{ secrets.HEALTHWISE_SSH_TEMP_DEST}}/api/health-wise-api
            sudo systemctl restart api-healthwise.service
